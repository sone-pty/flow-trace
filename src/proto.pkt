struct Uuid {
    id: vector<u8, 16>,
}

enum ErrCode: u8 {
    Ok = 0,
    NodeNotFound = 1,
}

enum FlowType: u8 {
    Unknown = 0,
    BevTree = 1,
    Dialog = 2,
}

enum FlowStatus: u8 {
    Idle = 0,
    Running = 1,
    Succeed = 2,
    Failed = 3,
    Abort = 4,
    Suspend = 5,
}

enum FlowEvent: u8 {
    NodeActivated = 0,
    BranchSelected = 1,
    ConditionEvaluated = 2,
    CustomEvent = 3,
}

struct InstanceFlag {
    id: Uuid,
    ty: FlowType,
}

packet<100> PacketHB;

request<101> ReqListenNode {
    id: Uuid,
}

response<102> RspListenNode {
    id: Uuid,
    code: ErrCode,
    optional tid: u32,
}

request<103> ReqCancelListen {
    id: Uuid,
    tid: u32,
}

response<104> RspCancelListen {
    id: Uuid,
    tid: u32,
    code: ErrCode,
}

packet<105> PacketNodeStatus {
    ty: FlowType,
    nid: Uuid,
    index: FlowStatus,
}

packet<106> PacketNodeEvent {
    ty: FlowType,
    nid: Uuid,
    index: FlowEvent,
    optional meta: vector<u8, 0xFFFF>,
}

packet<107> PacketExecutorInfo {

}

packet<108> PacketInstanceClose {
    ty: FlowType,
    id: Uuid,
}

request<109> ReqGetAllInstances {}

response<110> RspGetAllInstances {
    instances: vector<InstanceFlag, 0xFFFF>,
    end: bool,
}